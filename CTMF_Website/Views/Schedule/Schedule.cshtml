@{
	ViewBag.Title = "Schedule";
}
<style>
	.notatend-table > tbody > tr > td:nth-child(1) {
		width: 20px;
		border: 1px solid black;
	}
</style>
<script src="~/Scripts/ekko-lightbox.js"></script>
<link rel="stylesheet" href="~/CSS/Schedule.css" />

<script type="text/javascript">
	$(document).ready(function () {
		initCalendar();

		//$(document).delegate('*[data-toggle="lightbox"]', 'click', function (event) {
		//	event.preventDefault();
		//	$(this).ekkoLightbox();
		//});
	});

	var $divDateMap;
	var minDate;
	var maxDate;
	var curDate;

	function initCalendar() {
		var $div = $('#calendar');
		var $divContainer = $div.parent();

		$div.css({
			position: 'absolute',
			overflow: 'hidden'
		});
		$divContainer.css({
			overflow: 'hidden'
		});

		var parentWidth = $divContainer.width();
		var parentHeight = $divContainer.height();
		var parentTop = $divContainer.position().top;

		//if (parentWidth * 10 > parentHeight * 16) {
		//	$div.height(parentHeight);
		//	$div.width(parentHeight * 1.6);

		//	$div.css({
		//		top: parentTop,
		//		left: ($divContainer.width() - parentHeight * 1.6) / 2,
		//		'border-top-width': '0px',
		//		'border-bottom-width': '0px'
		//	});
		//}
		//else {
		//	$div.width(parentWidth);
		//	$div.height(parentWidth / 16 * 10);

		//	$div.css({
		//		top: ($divContainer.height() - (parentWidth / 16 * 10)) / 2,
		//		left: 0,
		//		'border-left-width': '0px',
		//		'border-right-width': '0px'
		//	});
		//}

		$div.width(476.8);
		$div.height(300);

		var $divEatingDetail = $('#eating-detail');
		$divEatingDetail.css({
			position: 'absolute',
			width: $divContainer.width() - $div.width(),
			height: 50,
			top: $divContainer.offset().top,
			left: ($divContainer.position().left + $div.width() + 1) + 'px'
		});

		$div.css({
			top: $divContainer.offset().top,
			left: $divContainer.offset().left,
			'border-top-width': '0px',
			'border-bottom-width': '0px'
		});

		//init for calendar content
		var $divContent = $div.find('#calendar-content');
		var divContentHeight = $div.height();
		var divContentWidth = divContentHeight * 1.1;
		$divContent.css({
			top: 0,
			left: 0,
			width: divContentWidth,
			height: divContentHeight,
			position: 'absolute',
			'border-right': '1px solid black'
		});

		var contentChildWidth = divContentWidth / 7;
		var contentChildHeight = divContentHeight / 7;

		$('.ctmf-cal-header').css({
			width: contentChildWidth,
			height: contentChildHeight
		});

		var divsHeader = $('#calendar-content').children();
		for (i = 0; i < divsHeader.length; i++) {
			(function () {
				$(divsHeader[i]).css({
					'font-size': contentChildHeight * 0.7,
					top: 0,
					left: i * contentChildWidth
				});
			}());
		}

		$(divsHeader[0]).append('T2');
		$(divsHeader[1]).append('T3');
		$(divsHeader[2]).append('T4');
		$(divsHeader[3]).append('T5');
		$(divsHeader[4]).append('T6');
		$(divsHeader[5]).append('T7');
		$(divsHeader[6]).append('CN');

		$divDateMap = new Array(7);
		for (i = 0; i < 7; i++) {
			$divDateMap[i] = new Array(6);
		}

		for (i = 1; i <= 6; i++) {
			for (j = 0; j < 7; j++) {
				(function () {
					var $divDate = $('<div>', {
						id: 'ctmf-cal-date-' + j + (i - 1),
						'class': 'ctmf-cal-date'
					});

					$divDate.css({
						'font-size': contentChildHeight - 8,
						position: 'absolute',
						width: contentChildWidth,
						height: contentChildHeight,
						top: i * contentChildHeight,
						left: j * contentChildWidth
					});

					$divContent.append($divDate);

					$divDateMap[j][i - 1] = $divDate;
				}())
			}
		}

		//init for month picker
		var $divMonthPicker = $div.find('#calendar-month-picker');
		var $ddlMonth = $divMonthPicker.find('#calendar-month-picker-month');
		var $ddlYear = $divMonthPicker.find('#calendar-month-picker-year');

		var divMonthPickerHeight = divContentHeight * 0.2;
		var divMonthPickerWidth = $div.width() - divContentWidth;
		$divMonthPicker.css({
			position: 'absolute',
			top: 0,
			left: divContentWidth,
			'border-bottom': '1px solid black',
			'text-align': 'center',
			'font-size': divMonthPickerHeight * 0.3,
			width: divMonthPickerWidth,
			height: divMonthPickerHeight
		});

		$ddlMonth.css({
			'font-size': divMonthPickerHeight * 0.18,
			height: divMonthPickerHeight * 0.35
		});
		$ddlYear.css({
			'font-size': divMonthPickerHeight * 0.18,
			height: divMonthPickerHeight * 0.35
		});

		var $divNotatened = $('#calendar-annotated');
		$divNotatened.css({
			position: 'absolute',
			top: divMonthPickerHeight,
			left: divContentWidth,
			width: $div.width() - divContentWidth,
			height: $div.height() - divMonthPickerHeight,
		});
		//alert(parentWidth +';' + divContentWidth);

		var $spanNotatend = $('<span></span>').text('Chú thích');
		$divNotatened.append($spanNotatend);

		var $tableNotatend = $('<Table></Table>').attr('class', 'notatend-table')
		.css({ 'margin': ' 2px 0px 0px 2px' })
		.append('<tr><td bgcolor="' + getColorFromChar('N') + '"><td>Chưa đặt lịch</td></tr>')
		.append('<tr><td bgcolor="' + getColorFromChar('0') + '"><td>Đã đặt lịch</tr>')
		.append('<tr><td bgcolor="' + getColorFromChar('1') + '"><td>Ngày đã ăn</tr>')
		.append('<tr><td bgcolor="' + getColorFromChar('X') + '"><td>Ngày nghỉ</tr>');
		$divNotatened.append($tableNotatend);

		$ddlMonth.change(function () {
			var selectedYear = parseInt($ddlYear.val().toString());
			var selectedMonth = parseInt($ddlMonth.val().toString());

			setCalendarDate(selectedMonth, selectedYear);
			$.ajax({
				url: '@Url.Action("GetScheduleData", "Schedule")',
				data: { selectedMonth: selectedMonth, selectedYear: selectedYear },
				traditional: true,
				success: function (result) {
					var scheduleStr = result.value;
					setScheduleColor(scheduleStr, selectedMonth, selectedYear);

					enableCalendar();
				}
			});
		});

		$ddlYear.change(function () {
			var selectedYear = parseInt($ddlYear.val().toString());

			var splitMinDate = minDate.split('-');
			var minDateYear = parseInt(splitMinDate[0]);
			var minDateMonth = parseInt(splitMinDate[1]);

			var splitMaxDate = maxDate.split('-');
			var maxDateYear = parseInt(splitMaxDate[0]);
			var maxDateMonth = parseInt(splitMaxDate[1]);

			var splitCurDate = curDate.split('-');
			var curDateYear = parseInt(splitCurDate[0]);
			var curDateMonth = parseInt(splitCurDate[1]);

			$ddlMonth.empty();
			if (minDateYear == maxDateYear) {
				for (i = minDateMonth; i <= maxDateMonth; i++) {
					$ddlMonth.append('<option value="' + i + '">Tháng ' + i + '</option>');
				}
			}
			else if (selectedYear == minDateYear) {
				for (i = minDateMonth; i <= 12; i++) {
					$ddlMonth.append('<option value="' + i + '">Tháng ' + i + '</option>');
				}
			}
			else if (selectedYear == maxDateYear) {
				for (i = 1; i < maxDateMonth; i++) {
					$ddlMonth.append('<option value="' + i + '">Tháng ' + i + '</option>');
				}
			}

			$ddlMonth.change();
		});

		$.ajax({
			url: '@Url.Action("GetDateRange", "Schedule")',
			success: function (data) {
				if (data.length != 3) {
					disableCalendar('Có lỗi xảy ra.');
					return false;
				}

				//format : mm-yyyy
				minDate = data[0];
				maxDate = data[1];
				curDate = data[2];

				var splitMinDate = minDate.split('-');
				var minDateYear = parseInt(splitMinDate[0]);
				var minDateMonth = parseInt(splitMinDate[1]);

				var splitMaxDate = maxDate.split('-');
				var maxDateYear = parseInt(splitMaxDate[0]);
				var maxDateMonth = parseInt(splitMaxDate[1]);

				var splitCurDate = curDate.split('-');
				var curDateYear = parseInt(splitCurDate[0]);
				var curDateMonth = parseInt(splitCurDate[1]);

				$ddlYear.empty();
				for (i = minDateYear; i <= maxDateYear; i++) {
					$ddlYear.append('<option value="' + i + '">' + i + '</option>');
				}

				var selectedMonth, selectedYear;
				if (curDateYear < minDateYear || curDateYear > maxDateYear) {
					selectedMonth = minDateMonth;
					selectedYear = minDateYear;
				}
				else if (curDateYear == minDateYear && curDateMonth < minDateMonth) {
					selectedMonth = minDateMonth;
					selectedYear = minDateYear;
				}
				else if (curDateYear == maxDateYear && curDateMonth > maxDateMonth) {
					selectedMonth = maxDateMonth;
					selectedYear = maxDateYear;
				}
				else {
					selectedMonth = curDateMonth;
					selectedYear = curDateYear;
				}

				$ddlMonth.empty();
				if (minDateYear == maxDateYear) {
					for (i = minDateMonth; i <= maxDateMonth; i++) {
						$ddlMonth.append('<option value="' + i + '">Tháng ' + i + '</option>');
					}
				}
				else if (selectedYear == minDateYear) {
					for (i = minDateMonth; i <= 12; i++) {
						$ddlMonth.append('<option value="' + i + '">Tháng ' + i + '</option>');
					}
				}
				else if (selectedYear == maxDateYear) {
					for (i = 1; i < maxDateMonth; i++) {
						$ddlMonth.append('<option value="' + i + '">Tháng ' + i + '</option>');
					}
				}

				$ddlMonth.val(selectedMonth);
				$ddlYear.val(selectedYear);
				setCalendarDate(selectedMonth, selectedYear);

				disableCalendar('Đang tại dữ liệu ...<img src="/Images/Calendar/ajax-loader.gif"'
					+ 'style="width: ' + ($div.height() * 0.1) + 'px; height: ' + ($div.height() * 0.1) + 'px"/>');

				$ddlMonth.change();
			}
		});
	}

	function setCalendarDate(selectedMonth, selectedYear) {
		var date = new Date(selectedYear + '-' + (selectedMonth) + '-01');
		var firstDayCoorX = getCoorXFromDay(date.getDay());

		setNumber(1, firstDayCoorX, 0);
		setEvent(firstDayCoorX, 0);

		date.setDate(date.getDate() + 1);

		for (i = 0; i < firstDayCoorX; i++) {
			setEmpty(i, 0);
			setBGColor('#CFCFD7', i, 0); //the day outside month
		}

		for (i = firstDayCoorX + 1; i < 7; i++) {
			setNumber(date.getDate(), i, 0);
			setEvent(i, 0);
			date.setDate(date.getDate() + 1);
		}

		for (i = 1; i < 6; i++) {
			for (j = 0; j < 7; j++) {
				if ((date.getMonth() + 1) == selectedMonth) {
					setNumber(date.getDate(), j, i);
					setEvent(j, i);
					date.setDate(date.getDate() + 1);
				}
				else {
					setEmpty(j, i);
					setBGColor('#CFCFD7', j, i);//the day outside month
				}
			}
		}
	}

	function setNumber(value, coorX, coorY) {
		if (typeof (value) == 'number') {
			if (value < 10)
				value = '0' + value;
		}
		$divDateMap[coorX][coorY].empty();
		$divDateMap[coorX][coorY].append(value);
	}

	function setBGColor(color, coorX, coorY) {
		$divDateMap[coorX][coorY].css('background-color', color);
	}

	function setEmpty(coorX, coorY) {
		$divDateMap[coorX][coorY].empty();
	}

	function setEvent(coorX, coorY) {
		$divDateMap[coorX][coorY].css('cursor', 'pointer');

		$divDateMap[coorX][coorY].unbind().click(
			function () {
				var selectedDay = parseInt($(this).text());
				var selectedMonth = parseInt($('#calendar-month-picker-month').val().toString());
				var selectedYear = parseInt($('#calendar-month-picker-year').val().toString());

				var listScheduleMealSetID = new Array();
				var unrecord = 0;
				$.ajax({
					url: '@Url.Action("GetEatList", "Schedule")',
					data: { selectedDay: selectedDay, selectedMonth: selectedMonth, selectedYear: selectedYear },
					tranditional: true,
					async: false,
					success: function (result) {
						if (result == 'error') {
							alert('Có lỗi khi lấy dữ liệu');
							return false;
						}

						listScheduleMealSetID = result.result;
						unrecord = result.Unrecord;
					}
				});

				$.ajax({
					url: '@Url.Action("GetScheduleDateDetail", "Schedule")',
					data: { selectedDay: selectedDay, selectedMonth: selectedMonth, selectedYear: selectedYear },
					tranditional: true,
					success: function (data) {
						if (data == 'error') {
							alert('Có lỗi khi lấy dữ liệu');
							return false;
						}

						if (!$('#eating-detail').hasClass('is-filled')) {
							fillEatingDetail();
						}

						$('.serving-time-table tr').empty();
						$('.span-day-off').empty();
						$('#unrecord-span').remove();

						if (unrecord != 0) {
							$('.date-detail-header').first().before($('<span></span>').attr('id', 'unrecord-span').css({'font-size': '18px'}).text('Không được ghi nhận vào bữa:' + unrecord));
						}


						var label = 65;
						var schedule = data.result;
						for (j = 0; j < schedule.length; j++) {
							var $table = $('#serving-time-table-' + schedule[j].ServingTimeID);

							if (schedule[j].MealSetID != null) {
								var $tr = $('<tr></tr>');
								$tr.append($('<td></td>').text(String.fromCharCode(label)));

								var found = false;
								for (index = 0; index < listScheduleMealSetID.length; index++) {
									if (listScheduleMealSetID[index].ScheduleMealSetDetailID == schedule[j].ScheduleMealSetDetailID) {
										$tr.children('td').css({ 'border-color': 'red' }).attr('title', 'Suất đã ăn');
										found = true;
										break;
									}
								}

								var $a = $('<a></a>').attr({
									'href': '#',
									'class': 'show-meal-set-modal',
									'data-url': '@(Url.Action("GetMealSetModal"))' + '?MealSetID=' + schedule[j].MealSetID,
								}).text(schedule[j].Name);

								$a.click(function () {
									var url = $(this).attr('data-url');

									$.get(url, function (data) {
										$('#meal-set-container').html(data);
										$('#dishModal').modal('show');
									});
								});

								$tr.append($('<td></td>').append($a));

								$tr.append($('<td></td>').text(schedule[j].Description));

								label++;

								$table.append($tr);
							}
							else if (!schedule[j].IsDayOn) {
								var $header = $('#date-detail-header-' + schedule[j].ServingTimeID);

								var $span = $('<span></span>').text('(Nghỉ)').attr('class', 'span-day-off');
								$header.children('.span-eating-time').append($span);
							}
						}
					}
				});
			}
		)
	}

	function setScheduleColor(scheduleStr, month, year) {
		var date = new Date(year + '-' + month + '-01');
		var firstDayCoorX = getCoorXFromDay(date.getDay());

		var strIndex = 0;

		for (i = firstDayCoorX; i < 7; i++) {
			setBGColor(getColorFromChar(scheduleStr.charAt(strIndex)), i, 0);
			strIndex++;
		}

		for (i = 1; i < 6; i++) {
			for (j = 0; j < 7; j++) {
				var ch = scheduleStr.charAt(strIndex);
				setBGColor(getColorFromChar(ch), j, i);

				strIndex++;
				if (strIndex >= scheduleStr.length) {
					break;
				}
			}
			if (strIndex >= scheduleStr.length) {
				break;
			}
		}
	}

	function setToolTop(scheduleStr) {

	}

	function getColorFromChar(ch) {
		if (ch == 'X') {
			return '#33cc33'; //day off color <= thay vao cai gia tri o day nay`
		}
		else if (ch == 'N') {
			return '#FFFFFF'; //not have in schedule
		}
		else if (ch == '0') {
			return '#FFFFCC'; //didn't eat date color
		}
		else {
			return '#FFB5B5'; ////eated date color
		}
	}

	function getCoorXFromDay(day) {
		if (day == 0)
			return 6;
		return day - 1;
	}

	function disableCalendar(msg) {
		$('.ctmf-calendar-transbox').remove();

		var $divTransbox = $('<div>', {
			class: 'ctmf-calendar-transbox'
		});

		$divTransbox.append(msg);

		$divTransbox.css({
			'font-size': $('#calendar').height() * 0.1,
			'line-height': $('#calendar').height() + 'px',
			position: 'absolute',
			width: $('#calendar').width(),
			height: $('#calendar').height()
		});
		$('#calendar').append($divTransbox);
	}

	function enableCalendar() {
		$('.ctmf-calendar-transbox').remove();
	}

	function fillEatingDetail() {
		$.ajax({
			url: '@Url.Action("GetEatingTime", "Schedule")',
			async: false,
			success: function (data) {
				if (data == 'error') {
					alert('Có lỗi khi lấy dữ liệu.');
					return false;
				}

				var $divDateDetail = $('#eating-detail');
				var servingTime = data.servingTime;

				for (j = 0; j < servingTime.length; j++) {
					var $header = $('<div></div>').attr({
						'class': 'date-detail-header',
						'id': 'date-detail-header-' + servingTime[j].ServingTimeID
					});

					var $span = $('<span></span>').css({
						'font-size': '18px'
					}).attr('class', 'span-eating-time').text(servingTime[j].Name + " Thời gian:" + servingTime[j].StartTimeStr
						+ (servingTime[j].EndTimeStr == null ? "" : "-" + servingTime[j].EndTimeStr));

					var $table = $('<table></table>').css({
						width: '100%',
						'border-collapse': 'collapse',
						border: '1px solid black'
					}).attr('id', 'serving-time-table-' + servingTime[j].ServingTimeID)
						.attr('class', 'serving-time-table table table-bordered')
						.append('<col width="5%"/><col width="25%"/><col width="45%"/>');
					// [label] [name] [image] [description]

					$header.append($span);

					$divDateDetail.append($header);
					$divDateDetail.append($table);
				}

				$divDateDetail.addClass('is-filled');
			}
		});
	}
</script>
<link href="~/CSS/table.css" rel="stylesheet" />
<div class="container container-fix">
	<fieldset>
		<legend class="table-title">Lịch các bữa ăn hàng ngày</legend>
		<div>
			<div class="table-body">
				<div id="container" style="width: 100%; height: 300px; top: 200px;">
					<div id="calendar" class="ctmf-cal">
						<div id="calendar-content">
							<div id="header-2" class="ctmf-cal-header"></div>
							<div id="header-3" class="ctmf-cal-header"></div>
							<div id="header-4" class="ctmf-cal-header"></div>
							<div id="header-5" class="ctmf-cal-header"></div>
							<div id="header-6" class="ctmf-cal-header"></div>
							<div id="header-7" class="ctmf-cal-header"></div>
							<div id="header-cn" class="ctmf-cal-header"></div>
						</div>
						<div id="calendar-month-picker" style="border-top: 1px solid black">
							<span class="month-picker-text">Chọn tháng, năm</span>
							<br />
							<select id="calendar-month-picker-month" class="ctmf-cal-month-picker-ddl"></select>
							<select id="calendar-month-picker-year" class="ctmf-cal-month-picker-ddl"></select>
						</div>
						<div id="calendar-annotated" style="border-bottom: 1px solid black"></div>
					</div>
					<div id="eating-detail" style="margin-left: 4px;"></div>
				</div>
				<div id="dishModal" class="modal fade" role="dialog">
					<div class="modal-dialog" style="width:700px">
						<div class="modal-content">
							<div class="modal-header">
								<button type="button" class="close" data-dismiss="modal">&times;</button>
								<h4 class="modal-title" style="text-align: center; font-weight: bold; font-size: 1.4em; text-transform: uppercase; color: #B00622">Suất ăn</h4>
							</div>
							<div class="modal-body" id="meal-set-container">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

	</fieldset>
</div>